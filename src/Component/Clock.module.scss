.container {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    background-color: black;
}

.clockWrapper {
    position: relative;
    width: 480px;
    height: 480px;
}

// .shadow {
//     position: absolute;
//     inset: 0;
//     border-radius: 50%;
//     background-color: black;
//     opacity: 0;
//     filter: blur(8px);
//     transform: translate(8px, 8px);
//     overflow: hidden;

//     .fluidBlob {
//         position: absolute;
//         width: 60vmax; // 适当的大小
//         height: 60vmax;
//         border-radius: 50%;
//         filter: blur(80px); // 增加模糊度让过渡更柔和
//         mix-blend-mode: screen;
//         animation: moveBlob 12s ease-in-out infinite;
//         transition: transform 0.3s ease-out;
//         z-index: 30;
//         opacity: 0.9; // 增加不透明度

//         &.blob1 {
//             background: rgb(255, 107, 0); // 暖色调
//             transform-origin: 40% 60%;
//             animation-delay: -2s;
//             filter: blur(80px) brightness(1.7);
//             transform: translate(20%, -20%);
//         }

//         &.blob2 {
//             background: rgb(0, 85, 255); // 蓝色
//             transform-origin: 60% 40%;
//             animation-delay: -4s;
//             filter: blur(80px) brightness(1.7);
//             transform: translate(20%, -20%);
//         }

//         &.blob3 {
//             background: rgb(255, 0, 128); // 改为粉红色以匹配图片
//             transform-origin: 50% 50%;
//             animation-delay: -6s;
//             filter: blur(80px) brightness(1.7);
//             transform: translate(0, 20%);
//         }
//     }
// }

// @keyframes moveBlob {

//     0%,
//     100% {
//         transform: scale(1) translate(0, 0);
//     }

//     25% {
//         transform: scale(1.1) translate(50px, 30px); // 减小移动范围
//     }

//     50% {
//         transform: scale(0.9) translate(-40px, 40px);
//     }

//     75% {
//         transform: scale(1.2) translate(-30px, -50px);
//     }
// }

.clockFrame {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: 50%;
    overflow: hidden;
    box-shadow:
        inset 0 0 4px 4px rgba(0, 0, 0, 0.5);
    background:
        // linear-gradient(60deg, rgb(166, 116, 242), rgba(255, 90, 20, 0.0) 75%),
        // linear-gradient(-15deg, rgba(255, 90, 20), rgba(255, 90, 20, 0.0) 75%),
        // linear-gradient(135deg, rgb(52, 148, 244), rgba(60, 153, 246, 0.0) 100%),
        linear-gradient(135deg, rgb(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6) 100%);
    ;

}


.background {
    position: absolute;
    inset: 0;
    width: 500px;
    height: 500px;
    z-index: 1;
    opacity: 1;
    background:
        linear-gradient(127deg, rgba(0, 255, 0, 0.8), rgba(0, 255, 0, 0) 65%),
        linear-gradient(217deg, rgba(0, 0, 255, 1.0), rgba(0, 0, 255, 0) 75%),
        linear-gradient(336deg, rgba(255, 0, 0, 0.8), rgba(255, 0, 0, 0) 60%);
    animation: gradientShift 6s ease-in-out infinite alternate
}

@keyframes gradientShift {

    0%,
    100% {
        // 动画的开始和结束状态
        // transform:  scale(1);
        // translate(-50%, -50%) 是为了确保元素以自己的中心点为基准进行定位
        // scale(1) 表示原始大小
        transform: rotateZ(-15deg)
    }

    50% {
        // transform: rotate(0deg); // 2D平面旋转
        // transform: rotateX(45deg); // 沿X轴旋转
        // transform: rotateY(45deg); // 沿Y轴旋转
        transform: rotateZ(55deg) scale(1.3); // 沿Z轴旋转
        // transform: ; // 沿Z轴旋转‰
        // transform: skew(10deg, 10deg); // 倾斜变形
        // 动画进行到一半时的状态
        // transform:  scale(1.8);
        // translate(-51%, -49%) 表示相对原位置略微偏移
        // 水平左移1%，垂直上移1%
        // scale(0.95) 表示缩小到原来的95%
    }
}

.maskSS {
    position: absolute;
    background: rgba(0, 0, 255, 0);
    border-radius: 50%;
    width: 48.5%;
    height: 100%;
    left: 0;
    top: 0;
    z-index: 35;
    filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.5));

    &::before {
        content: '';
        position: absolute;
        inset: -4px; // 扩展边界
        border-radius: inherit;
        background: rgba(0, 0, 0, 0.5);
        filter: blur(4px);
    }

}

.mask {
    position: absolute;
    background: #211F1F;
    width: 70%;
    height: 100%;
    left: 0;
    top: 0;
    clip-path: ellipse(70% 70% at 0 50%);
    z-index: 35;
    filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.5));

}

.maskS {
    position: absolute;
    background: #000;
    width: 70%;
    height: 100%;
    left: 0;
    top: 0;
    clip-path: ellipse(68% 68% at 0 50%);
    z-index: 35;
    box-shadow:
        0 0 4px 4px rgba(0, 0, 0, 0.5);
}

.rotatingFace {
    position: relative;
    width: 100%;
    height: 100%;
    cursor: pointer;

    img {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 80%;
        height: 80%;
        object-fit: contain; // 或者使用 cover，取决于你想要的效果
    }
}

.pointer {
    position: absolute;
    right: 72px;
    top: 48.5%;
    width: 19px;
    height: 19px;
    // transform: translateY(-50%) translateX(50%);
    // width: 0;
    // height: 0;
    // border-top: 10px solid transparent;
    // border-bottom: 10px solid transparent;
    // border-left: 20px solid black;
    // /* 改为 border-left */
    // border-right: none;
    // /* 移除 border-right */
    // filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
    z-index: 20;

    img {
        width: 100%;
        height: 100%;
        object-fit: contain; // 或者使用 cover，取决于你想要的效果
    }
}

.text {
    font-size: 24px;
    font-weight: bold;
    text-anchor: middle;
    dominant-baseline: middle;
}

.jones {
    font-size: 18px;
    font-weight: 600;
    text-anchor: middle;
}

.hourTick {
    stroke: black;
    stroke-width: 2;
}

.minuteTick {
    stroke: black;
    stroke-width: 1;
}

.clockFace {
    width: 100%;
    height: 100%;
}

.textContainer {
    position: absolute; // 添加绝对定位
    box-sizing: border-box;
    padding: 100px 0px 100px 0px;
    top: 0;
    left: 0;
    width: 100%; // 设置宽度
    height: 100%; // 设置高度
    display: flex;
    justify-content: space-between; // 两端对齐
    align-items: center;
    z-index: 40; // 确保在适当的层级
    pointer-events: none; // 防止干扰时钟的拖动功能

    .left {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        color: white; // 文字颜色
        padding-left: 70px;
        margin-bottom: 10px;

        .weather {
            width: 100px;
            height: 100px;

            img {
                width: 100%;
                height: 100%;
                object-fit: contain; // 或者使用 cover，取决于你想要的效果
            }
        }

        .date {
            display: flex;
            align-items: center;
            gap: 20px;
            position: relative;
            padding-top: 4px;
            padding-bottom: 4px;
            margin-top: 12px;
            margin-bottom: 12px;

            // 边框和发光效果
            &::before,
            &::after {
                content: '';
                position: absolute;
                left: 0; // 从10%开始
                right: 0; // 到90%结束
                height: 1px;
                background: linear-gradient(to right,
                        transparent,
                        rgba(255, 255, 255, 0.8) 20%,
                        rgba(255, 255, 255, 0.8) 80%,
                        transparent);
                box-shadow:
                    0 0 10px rgba(255, 255, 255, 0.3),
                    0 0 20px rgba(255, 255, 255, 0.2),
                    0 0 30px rgba(255, 255, 255, 0.1);
            }

            &::before {
                top: 0;
            }

            &::after {
                bottom: 0;
            }

            // 额外添加模糊光晕效果
            &::before {
                filter: blur(0.5px);
            }

            &::after {
                filter: blur(0.5px);
            }

            .dateLeft {
                font-size: 72px;
                line-height: 72px;
                color: #FFC744;
            }

            .dateRight {
                display: flex;
                flex-direction: column;
                align-items: flex-end;

                .dru {
                    font-size: 32px;
                    color: #63c2fd
                }

                .drb {
                    font-size: 32px;
                    color: #ffffff;
                }
            }
        }

        .env {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            font-size: 40px;

            .altitude {
                display: flex;
                align-items: center;
                gap: 8px;
            }

            .temperature {
                @extend .altitude
            }

            img {
                width: 44px;
                height: 44px;
                object-fit: contain; // 或者使用 cover，取决于你想要的效果
            }
        }

        .decibel {
            position: relative;

            .word {
                color: #63c2fd;
                font-size: 27px;
            }

            .number {
                font-size: 27px;
                position: absolute;
                right: 0;

            }
        }
    }

    .right {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
        color: black;
        padding-right: 132px;
        gap: 10px;

        .lunarCalendar {
            font-size: 24px;
            text-align: left; // 添加这行使文本靠左
            align-self: flex-start; // 添加这行使整个元素靠左
        }

        .time {
            text-align: right;
            font-family: 'DIN', sans-serif;
            font-weight: 500;
            font-size: 120px;
            line-height: 83%;
            letter-spacing: 0%;
            margin-left: 20px;

            div {
                // line-height: 100%;
            }
        }

        .electricity {
            font-size: 27px;
            text-align: left; // 添加这行使文本靠左
            align-self: flex-start; // 添加这行使整个元素靠左
            display: flex;
            gap: 10px;
            font-weight: 500;

            img {
                width: 32px;
                height: 32px;
                object-fit: contain; // 或者使用 cover，取决于你想要的效果
            }
        }
    }
}